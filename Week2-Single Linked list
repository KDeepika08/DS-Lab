#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node*link;
};
struct node*head,*cur,*temp,*temp1;

//CREATING A NODE
struct node*create(){
	int n;
	printf("Enter the no.of nodes");
	scanf("%d",&n);
	while(n--){
		cur=(struct node*)malloc(sizeof(struct node));
		scanf("%d",&(cur->data));
		cur->link=NULL;
		if(head==NULL){
			head=cur;
		}
		else{
			temp=head;
			while(temp->link != NULL)
				temp=temp->link;
			temp->link=cur;
		}
		}
	return head;

}

//INSERT AN ELEMENT AT BEGINNING
struct node*insert_begin(int ele){
	cur=(struct node*)malloc(sizeof(struct node));
	cur->data=ele;
	cur->link=head;
	head=cur;
	return head;
}

//INSERT AN ELEMENT AT END
struct node*insert_end(int ele){
	cur=(struct node*)malloc(sizeof(struct node));
	cur->data=ele;
	cur->link=NULL;
	temp=head;
	while(temp->link != NULL)
		temp=temp->link;
	temp->link=cur;
	return head;
}

//INSERT AN ELEMENT AT POSITION
struct node*insert_pos(int ele,int pos){
	int c=1;
	cur=(struct node*)malloc(sizeof(struct node));
	cur->data=ele;
	temp=head;
	while(c<pos-1){
		temp=temp->link;
		c++;
	}
	cur->link=temp->link;
	temp->link=cur;
	return head;
}

//DELETE AN ELEMENT AT BEGINNING
struct node*delete_begin(struct node*head){
	temp=head;
	head=temp->link;
	printf("Deleted element = %d\n",temp->data);
	free(temp);
	return head;
}

//DELETE AN ELEMENT AT END
struct node*delete_end(struct node*head){
	temp=head;
	while(temp->link != NULL){
		temp1=temp;
		temp=temp->link;
	}
	temp1->link=NULL;
	printf("Deleted element=%d\n",temp->data);
	free(temp);
    return head;
}

//DELETE AN ELEMENT AT POSITION
struct node*delete_pos(struct node*head,int pos){
	int c=1;
	temp=head;
	while(c<pos){
		temp1=temp;
		temp=temp->link;
		c++;
	}
	temp1->link=temp->link;
	printf("Deleted element=%d\n",temp->data);
	free(temp);
	return head;
}

//DISPLAY 
void display(){
	temp=head;
	while(temp!=NULL){
		printf("%d->",temp->data);
		temp=temp->link;
	}
	printf("\n");
}

//REVERSE DISPLAY
void reverse_display(struct node*head){
	if(head!=NULL){
		reverse_display(head->link);
		printf("%d->",head->data);
    }
}

//SEARCH
 int search(struct node*head,int key){
	int c=1;
	temp=head;
	while(temp!=NULL){
		if(key == temp->data){
			return c;
		}
		temp=temp->link;
		c++;
	}
	return -1;
}

//SORT
struct node*sort(struct node*head){
	temp=head;
	int x;
	while(temp!=NULL){
		temp1=temp->link;
		while(temp1!=NULL){
			if(temp->data > temp1->data){
				x=temp->data;
				temp->data=temp1->data;
				temp1->data=x;
			}
			temp1=temp1->link;
		}
		temp=temp->link;
		}
	return head;
}

int main(){
	int ch,ele,pos,key;
	while(1){
	printf("1-Create\n 2-Insert at begin\n 3-Insert at end\n 4-Insert at position\n 5-Delete at begin\n 6-Delete at end\n 7-Delete at position\n 8-display\n 9-reverse-display\n 10-Search\n 11-Sort\n 12-Exit\n");
	printf("Enter your choice:");
	scanf("%d",&ch);
	switch(ch){
		case 1:head=create();
			break;
		case 2:printf("Enter the element to be added");
			scanf("%d",&ele);
			head=insert_begin(ele);
			break;
		case 3:printf("Enter the element to be added");
			scanf("%d",&ele);
			head=insert_end(ele);
			break;
		case 4:printf("Enter the element and pos");
			scanf("%d %d",&ele,&pos);
			head=insert_pos(ele,pos);
			break;
		case 5:head=delete_begin(head);
			break;
		case 6:head=delete_end(head);
			break;
		case 7:scanf("%d",&pos);
			head=delete_pos(head,pos);
			break;
		case 8:display(head);
			break;
		case 9:reverse_display(head);
			break;
		case 10:printf("Enter the key element");
			scanf("%d",&key);
			pos=search(head,key);
			if(pos==-1)
				printf("Element not found");
			else
				printf("Element found at %d\n",pos);
			break;
		case 11:head=sort(head);
			break;
		case 12:exit(0);
		}
	}
}		

OUTPUT:
1-Create
 2-Insert at begin   
 3-Insert at end     
 4-Insert at position
 5-Delete at begin   
 6-Delete at end     
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:1
Enter the no.of nodes5
12
34
56
42
65
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:8
12->34->56->42->65->
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:2
Enter the element to be added6
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:8
6->12->34->56->42->65->
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:3
Enter the element to be added78
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:8
6->12->34->56->42->65->78->
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:4
Enter the element and pos86 3
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:8
6->12->86->34->56->42->65->78->
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:5
Deleted element = 6
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:6
Deleted element=78
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:7
4
Deleted element=56
1-Create
 2-Insert at begin   
 3-Insert at end     
 4-Insert at position
 5-Delete at begin   
 6-Delete at end     
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:9
65->42->34->86->12->
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:10
Enter the key element42
Element found at 4
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:11
1-Create
 2-Insert at begin
 3-Insert at end
 4-Insert at position
 5-Delete at begin
 6-Delete at end
 7-Delete at position
 8-display
 9-reverse-display
 10-Search
 11-Sort
 12-Exit
Enter your choice:8
12->34->42->65->86->
